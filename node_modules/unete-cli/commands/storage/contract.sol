pragma solidity ^0.5.2;

contract Dictionary {

    mapping(bytes32 => string) load;
    mapping(bytes32 => string) types;

    function save (string memory str, string memory _type) public returns (bytes32) {
        bytes32 hash = sha256(abi.encodePacked(str));

        load[hash] = str;
        types[hash] = _type;

        return hash;
    }

    function hashOf (string memory str) public view returns (bytes32) {
        load;
        return sha256(abi.encodePacked(str));
    }

    function read (bytes32 hash) public view returns (string memory) {
        return load[hash];
    }

    function readtype (bytes32 hash) public view returns (string memory) {
        return types[hash];
    }
    
}